# Generated by Django 5.2 on 2025-04-23 21:36

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='LocAppGroups',
            fields=[
                ('LocAppGrp_id', models.AutoField(primary_key=True, serialize=False)),
                ('LocAppGrp_name', models.CharField(help_text='Enter Group name', max_length=200)),
                ('LocAppGrp_address', models.TextField(blank=True, help_text='Enter Group address', max_length=60, null=True)),
                ('LocAppGrp_description', models.TextField(blank=True, help_text='Decribe your company', max_length=150, null=True)),
                ('LocAppGrp_code', models.CharField(blank=True, help_text='Code to uniquely indentify group', max_length=10, unique=True)),
                ('server_Captured_on', models.DateTimeField(auto_now_add=True, help_text='Date and time data was input in the server')),
                ('Last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['LocAppGrp_name'],
            },
        ),
        migrations.CreateModel(
            name='LocAppUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('locuser_id', models.AutoField(primary_key=True, serialize=False)),
                ('telephone_Number', models.CharField(help_text='Contact Number of the employee', max_length=200, unique=True)),
                ('Last_modified', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LocAppGrpStatus',
            fields=[
                ('grpstatus_id', models.AutoField(primary_key=True, serialize=False)),
                ('useradmin', models.BooleanField(help_text='Choose whether the user is a group admin or not')),
                ('LocAppGrp_Fkeyid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statusgrps', to='locator.locappgroups')),
                ('locuser_Fkeyid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['grpstatus_id'],
            },
        ),
        migrations.AddField(
            model_name='locappgroups',
            name='LocAppGrp_user',
            field=models.ManyToManyField(related_name='locigroup', through='locator.LocAppGrpStatus', through_fields=('LocAppGrp_Fkeyid', 'locuser_Fkeyid'), to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LocAppPositions',
            fields=[
                ('LocAppPos_id', models.AutoField(primary_key=True, serialize=False)),
                ('LocAppPos_Date', models.DateField(help_text='Date the position was captured')),
                ('LocAppPos_timestamp', models.TimeField(help_text='Time the reading was taken in HH:MM:SS')),
                ('LocAppPos_latitude', models.FloatField(default=0, help_text='Latitude in decimal degrees from GPS')),
                ('LocAppPos_longitude', models.FloatField(default=0, help_text='Longitude in decimal degrees captured from GPS')),
                ('LocAppPos_accuracy', models.FloatField(default=0, help_text='Accuracy of latitude and Longitude in metres')),
                ('server_Captured_on', models.DateTimeField(auto_now_add=True, help_text='Date and time data was input in the server')),
                ('Last_modified', models.DateTimeField(auto_now=True, help_text='Date and time data was last updated in the server')),
                ('offline_Captured_on', models.DateTimeField(blank=True, help_text='Date and Time the data was locally captured', null=True)),
                ('offline_pkid', models.CharField(blank=True, help_text='Offline primary_key', max_length=20, null=True)),
                ('LocAppPos_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lociposition', to=settings.AUTH_USER_MODEL)),
                ('LocAppPos_user_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locgruposition', to='locator.locappgroups')),
            ],
            options={
                'ordering': ['LocAppPos_Date'],
            },
        ),
        migrations.CreateModel(
            name='QRLoginSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_token', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_authenticated', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
