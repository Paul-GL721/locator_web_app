# Default values for locatorapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 2

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: dockeraccount/registryname#replaced via the pipeline using 'release_values'
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "tagversion"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#application configmap: contains variables that will be used by the django application
configmapRef:
  DEBUG: "False" 
  DJANGO_ALLOWED_HOSTS: "locatorapp.paulgobero.com" 
  CSRF_TRUSTED_ORIGINS: "https://locatorapp.paulgobero.com"
  SECRET_KEY: "django-stagingsecure-^v25nd85__t013o5=7+v09mng5@(nded@w5-7@kuy*uh&vj@o8c@2k"
  SQL_ENGINE: "django.db.backends.postgresql"
  SQL_DATABASE: "locatorappdb"
  SQL_USER: "locatoruser"
  SQL_HOST: "postgresqldb.databases.svc.cluster.local"
  SQL_PORT: "5432"

secretRef:
  #actual database password as plain text (This is set for build pipeline purposes, we suggest you use an existing secret)
  actualdbpassword: password 
  existingdbsecret: false
  #environment name of the secret in the deployment (used to identify the secret in the deployment file)
  dbenvSecretkey: SQL_PASSWORD
  #name of the existing secret containig the password to the database(the password links app to db)
  dbexistingSecretname: staging-secrets
  #key of the existing secret containig the password to the database (the password links app to db)
  dbexistingSecretkey: SQL_PASSWORD

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "locatorapp"

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80
  containerPort: 8000

#if your using the traefik as the reverse proxy, you activate the ingressroute
ingressroute:
  enabled: true
  entryPoints:
    - web
    - websecure
  host_url: locatorapp.paulgobero.com
  pathprefix: /

#if you want to add a tsl certificate: ensure certmanager is installed and running
certificate:
  #secret name of the certificate issued by certmanager
  secretName: locatorapp-production-cert-com-tls
  certresolver: letsencrypt-production
  certissuerkind: ClusterIssuer

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/  
livenessProbe:
  httpGet:
    path: /
    port: http
    httpHeaders:
      - name: host
        value: locatorapp.paulgobero.com # Configure the appropriate host here (should be in the allowed host by django)
  initialDelaySeconds: 15
  timeoutSeconds: 5

readinessProbe:
  httpGet:
    path: /
    port: http
    httpHeaders:
    - name: Host
      value: locatorapp.paulgobero.com # Configure the appropriate host here (should be in the allowed host by django)
  initialDelaySeconds: 5
  periodSeconds: 5

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  pvStaticfiles:
    name: locatorapp-staticfilesdir-pv
    capacity: 12Gi
    accessmode: ReadWriteMany
    storageclass: locatorapp-staticfilesdir-storage 
    policy: Retain
  #pv claim for the static files 
  pvcStaticfiles: 
    existingpvclaimName: locatorapp-staticfilesdir-pvc 
    claimcapacity: 10Gi

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  #mounts to the config files
  configfile_mountPath: "/code/config"
  #mounts to staticfiles
  staticfile_mountPath: "/code/staticfiles" 
  staticfile_subPath: locatorapp-prod-staticfiles 

nodeSelector: {}

tolerations: []

affinity: {}
